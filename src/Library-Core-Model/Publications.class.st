"Abstract superclass for publications
"Class {	#name : #Publications,	#superclass : #Object,	#instVars : [		'pages',		'title',		'library'	],	#category : #'Library-Core-Model-Base'}{ #category : #accessing }Publications >> pages [	"Return the Pages of the receiver."	^pages ifNil: [ pages := 0 ]]{ #category : #accessing }Publications >> pages: anInteger [	"Sets the Pages of the receiver to the given Integer."	pages := anInteger]{ #category : #accessing }Publications >> title [	"Return the Title of the receiver."	^title ifNil: [ title := 'Unnamed ', self class name ]]{ #category : #accessing }Publications >> title: aString [	"Sets the Title of the receiver to the given String."	title := aString]{ #category : #accessing }Publications >> library [	"Returns the Library of the receiver."	^library]{ #category : #accessing }Publications >> library: aLibrary [	"Sets the Library of the receiver to the given Library"	library := aLibrary]{ #category : #testing }Publications class >> isAbstract [	"Return true when the receiver is abstract, false otherwise."	^self name = #Publications]